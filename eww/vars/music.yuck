(deflisten music-state
           :initial "stopped"
           "~/.local/bin/listen-player.sh state mpd")

(deflisten music-flag-loop
           :initial "-"
           "~/.local/bin/listen-player.sh loop mpd") ;; playlist | track | none

(deflisten music-flag-shuffle
           :initial false
           "~/.local/bin/listen-player.sh shuffle mpd") ;; true | false

(defpoll music-flag-consume
           :interval "2s"
           :initial "-"
           "~/.local/bin/get-music.sh consume")

(defpoll music-flag-crossfade
           :interval "2s"
           :initial "-"
           "~/.local/bin/get-music.sh crossfade")

(deflisten music-volume
         :iniitial "-%"
         "~/.local/bin/listen-player.sh volume mpd")

(deflisten music-title
           :initial ""
           "~/.local/bin/listen-player.sh title mpd")

(deflisten music-artist
           :initial ""
           "~/.local/bin/listen-player.sh artist mpd")

(deflisten music-album
           :initial ""
           "~/.local/bin/listen-player.sh album mpd")

(defpoll music-track-progress
           :interval "1s"
           :initial 0
           :run-while { music-state == "playing" }
           "~/.local/bin/get-music.sh progress")

(deflisten music-track-file
           :initial ""
           "~/.local/bin/listen-player.sh track_file mpd")

(deflisten music-rating
           :initial 0
           "~/.local/bin/listen-player.sh rating")

(deflisten music-album-cover-file
           :initial ""
           "~/.local/bin/listen-player.sh cover_file mpd")

(defpoll music-album-cover-color
         :interval "1h"
         "~/.local/bin/get-music.sh albumcovercolor")
