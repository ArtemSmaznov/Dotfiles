#+title:       Zathura
#+author:      Artem Smaznov
#+description: A vim-like document viewer
#+startup:     overview
#+property:    header-args :tangle zathurarc
#+auto_tangle: t

* Table of Contents :toc:
- [[#dependencies][Dependencies]]
- [[#general][General]]
- [[#ui][UI]]
- [[#backend][Backend]]
- [[#search][Search]]
- [[#cache][Cache]]
- [[#pages][Pages]]
- [[#scrolling][Scrolling]]
- [[#zooming][Zooming]]
- [[#completion][Completion]]
- [[#window-title][Window Title]]
- [[#status-bar][Status Bar]]
- [[#key-bindings][Key Bindings]]
  - [[#un-mapping][Un-mapping]]
  - [[#general-1][General]]
  - [[#navigation][Navigation]]
  - [[#view][View]]
  - [[#zoom][Zoom]]
  - [[#hints][Hints]]
  - [[#command][Command]]

* Dependencies
|-----------------+------------------------------|
| Name            | Description                  |
|-----------------+------------------------------|
| [[https://archlinux.org/packages/?name=zathura][zathura]]         | A vim-like document viewer   |
|-----------------+------------------------------|
| [[https://archlinux.org/packages/?name=zathura-cb][zathura-cb]]      | Comic book support           |
| [[https://archlinux.org/packages/?name=zathura-djvu][zathura-djvu]]    | DjVu support                 |
| [[https://archlinux.org/packages/?name=zathura-pdf-poppler][zathura-poppler]] | PDF support based on Poppler |
| [[https://archlinux.org/packages/?name=zathura-ps][zathura-ps]]      | PostScript support           |
|-----------------+------------------------------|

#+begin_example shell
sudo pacman -S --needed zathura zathura-cb zathura-djvu zathura-pdf-poppler zathura-ps
#+end_example

* General
Tells zathura whether to save document history at each page change or only when closing a document.
#+begin_src vimrc
set continuous-hist-save false
#+end_src

Defines the X clipboard into which mouse-selected data will be written.  When it
is "clipboard", selected data will be  written to the CLIPBOARD clipboard, and
can be pasted using the Ctrl+v key combination.  When it is "primary", selected
data will be written to the PRIMARY clipboard, and can be pasted using the
middle mouse button, or the Shift-Insert key combination.
#+begin_src vimrc
set selection-clipboard "clipboard"
#+end_src

Defines if a notification should be displayed after selecting text.
#+begin_src vimrc
set selection-notification true
#+end_src

Defines whether the window document should be updated based on the first page of a document.
#+begin_src vimrc
set window-icon-document false
#+end_src

* UI
Set color scheme
#+begin_src vimrc
include themes/base16
#+end_src

Set font
#+begin_src vimrc
set font "hack normal 12"
#+end_src

Defines the maximum number of displayed completion entries.
#+begin_src vimrc
set n-completion-items 15
#+end_src

Shows or hides GUI elements. If it contains:
- 'c' the command line is displayed
- 's' the statusbar is displayed
- 'h' the horizontal scrollbar is displayed
- 'v' the vertical scrollbar is displayed
#+begin_src vimrc
set guioptions "shv"
#+end_src

Dark Mode options
#+begin_src vimrc
set recolor
set recolor-keephue
set recolor-reverse-video false
#+end_src

The page padding defines the gap in pixels between each rendered page.
#+begin_src vimrc
set page-padding 3
#+end_src

* Backend
Defines which auto adjustment mode should be used if a document is loaded.  Possible options are "best-fit" and "width".
#+begin_src vimrc
set adjust-open "best-fit"
#+end_src

En/Disables the D-Bus service. If the services is disabled, SyncTeX forward synchronization is not available.
#+begin_src vimrc
set dbus-service true
#+end_src

Defines whether zathura's window should be raised when receiving certain commands via D-Bus.
#+begin_src vimrc
set dbus-raise-window true
#+end_src

Defines the database backend to use for bookmarks and input history. Possible values are "plain", "sqlite"  (ifbuilt  with
sqlite support) and "null". If "null" is used, bookmarks and input history will not be stored.
#+begin_src vimrc
set database "plain"
#+end_src

Defines the file monitor backend used to check for changes in files. Possible values are "glib", "signal" (if signal handling
is supported), and "noop". The "noop" file monitor does not trigger reloads.
#+begin_src vimrc
set filemonitor "glib"
#+end_src

En/Disables SyncTeX backward synchronization support.
#+begin_src vimrc
set synctex true
#+end_src

Defines the command executed for SyncTeX backward synchronization.
#+begin_src vimrc
set synctex-editor-command "vim --remote-silent +%{line} %{input}"
#+end_src

Defines the sandbox mode to use for the seccomp syscall filter. Possible values
are "none", "normal" and "strict". If  "none" is  used, the  sandbox will be
disabled. The use of "normal" will provide minimal protection and allow normal
use of zathura with support for all features. The "strict" mode is a read only
sandbox that is intended for viewing documents only.

Some features are disabled when using strict sandbox mode:
- saving/writing files
- use of input methods like ibus
- printing
- bookmarks and history

No feature regressions are expected when using normal sandbox mode.
When running under WSL, the default is "none" since seccomp is not supported in that environment.
#+begin_src vimrc
set sandbox "normal"
#+end_src

* Search
En/Disables incremental search (search while typing).
#+begin_src vimrc
set incremental-search true
#+end_src

Defines the opacity of a highlighted element
#+begin_src vimrc
set highlight-transparency 0.8
#+end_src

En/Disables horizontally centered search results.
#+begin_src vimrc
set search-hadjust true
#+end_src

Defines if the search results should be cleared on abort.
#+begin_src vimrc
set abort-clear-search true
#+end_src

* Cache
Defines the maximum number of pages that could be kept in the page cache. When
the cache is full and a new  page that  isn't cached becomes visible, the least
recently viewed page in the cache will be evicted to make room for the new one.
Large values for this variable are NOT recommended, because this will lead to
consuming a significant portion of the system memory.
#+begin_src vimrc
set page-cache-size 15
#+end_src

Defines the maximum size in pixels of the thumbnail that could be kept in the
thumbnail cache  per  page. The  thumbnail is scaled  for a quick preview during
zooming before the page is rendered. When the page is rendered, the result is
saved as the thumbnail only if the size is no more than this value. A larger
value increases quality but introduces longer delay in  zooming and uses more
system memory.
#+begin_src vimrc
set page-thumbnail-size 4194304
#+end_src

* Pages
Defines the number of pages that are rendered next to each other in a row.
#+begin_src vimrc
set pages-per-row 1
#+end_src

Defines  the  column  in which  the  first  page will  be  displayed.  This
setting is stored separately for every value of pages-per-row according to the
following pattern <1 page per row>:[<2 pages per row>[: ...]]. The last value in
the list will be used for all other number of pages per row if not set
explicitly.
Per  default,  the  first column is set to 2 for double-page layout, i.e. the
value is set to 1:2. A value of 1:1:3 would put the first page in dual-page
layout in the first column, and for layouts with more columns the first page
would be put in the 3rd column.
#+begin_src vimrc
set first-page-column "1:2"
#+end_src

Defines if the "Loading..." text should be displayed if a page is rendered.
#+begin_src vimrc
set render-loading true
#+end_src

Defines if the number of pages per row should be honored when advancing a page.
#+begin_src vimrc
set advance-pages-per-row false
#+end_src

En/Disables aligning to the left internal link targets, for example from the index.
#+begin_src vimrc
set link-hadjust true
#+end_src

Defines whether pages in multi-column view should start from the right side.
#+begin_src vimrc
set page-right-to-left false
#+end_src

* Scrolling
Defines the horizontal step size of scrolling by calling the scroll command once
#+begin_src vimrc
set scroll-hstep -1
#+end_src

Defines the step size of scrolling by calling the scroll command once
#+begin_src vimrc
set scroll-step 40
#+end_src

Defines the proportion of the current viewing area that should be visible after scrolling a full page.
#+begin_src vimrc
set scroll-full-overlap 0
#+end_src

Defines if the last/first page should be wrapped
#+begin_src vimrc
set scroll-wrap false
#+end_src

Defines if scrolling by half or full pages stops at page boundaries.
#+begin_src vimrc
set scroll-page-aware false
#+end_src

* Zooming
En/Disables the ability of changing zoom when following links.
#+begin_src vimrc
set link-zoom true
#+end_src

En/Disables horizontally centered zooming.
#+begin_src vimrc
set zoom-center false
#+end_src

Center the screen at the vertical midpoint of the page by default.
#+begin_src vimrc
set vertical-center false
#+end_src

Defines the maximum percentage that the zoom level can be.
#+begin_src vimrc
set zoom-max 1000
#+end_src

Defines the minimum percentage that the zoom level can be.
#+begin_src vimrc
set zoom-min 10
#+end_src

Defines the amount of percent that is zoomed in or out on each command.
#+begin_src vimrc
set zoom-step 10
#+end_src

* Completion
Defines if the directories should be displayed in completion.
#+begin_src vimrc
set show-directories true
#+end_src

Defines if hidden files and directories should be displayed in completion.
#+begin_src vimrc
set show-hidden false
#+end_src

Defines the number of recent files that should be displayed in completion.  If
the value is negative, no upper bounds are applied. If the value is 0, no recent
files are shown.
#+begin_src vimrc
set show-recent 10
#+end_src

* Window Title
Use basename of the file in the window title.
#+begin_src vimrc
set window-title-basename true
#+end_src

Display a short version of the file path, which replaces $HOME with ~, in the window title.
#+begin_src vimrc
set window-title-home-tilde false
#+end_src

Display the page number in the window title.
#+begin_src vimrc
set window-title-page false
#+end_src

* Status Bar
Use basename of the file in the statusbar.
#+begin_src vimrc
set statusbar-basename false
#+end_src

Display a short version of the file path, which replaces $HOME with ~, in the statusbar.
#+begin_src vimrc
set statusbar-home-tilde true
#+end_src

* Key Bindings
** Un-mapping
Normal
#+begin_src vimrc
unmap <Space> # Scroll a full page left, down, up or right
unmap t       # scroll full page left
unmap f       # follow
unmap r       # rotate
unmap R       # reload
unmap a       # fit
unmap s       # fit
unmap d       # multipage toggle
unmap zI      # Zooming
unmap zO      # Zooming
unmap z0      # Zooming
unmap zi      # Zooming
unmap zo      # Zooming
#+end_src

Fullscreen
#+begin_src vimrc
unmap [fullscreen] t # scroll full page left
unmap [fullscreen] f # follow
unmap [fullscreen] r # rotate
unmap [fullscreen] R # reload
unmap [fullscreen] a # fit
unmap [fullscreen] s # fit
unmap [fullscreen] d # multipage toggle
unmap [fullscreen] zI # Zooming
unmap [fullscreen] zO # Zooming
unmap [fullscreen] z0 # Zooming
unmap [fullscreen] zi # Zooming
unmap [fullscreen] zo # Zooming
#+end_src

** General
#+begin_src vimrc
map ZZ quit
map [fullscreen] ZZ quit

map f toggle_fullscreen
map [fullscreen] f toggle_fullscreen

map i feedkeys :info<Return>
map [fullscreen] i feedkeys :info<Return>
#+end_src

** Navigation
#+begin_src vimrc
map zt snap_to_page
map [fullscreen] zt snap_to_page

map bl feedkeys :blist<Return>
map ba feedkeys :bmark<Space>
map bd feedkeys :bdelete<Space>
map [fullscreen] bl feedkeys :blist<Return>
map [fullscreen] ba feedkeys :bmark<Space>
map [fullscreen] bd feedkeys :bdelete<Space>
#+end_src

** View
#+begin_src vimrc
map tp adjust_window best-fit
map tw adjust_window width
map [fullscreen] tp adjust_window best-fit
map [fullscreen] tw adjust_window width

map r reload
map [fullscreen] r reload

map R rotate
map [fullscreen] R rotate

map tc recolor
map [fullscreen] tc recolor

map td toggle_page_mode
map [fullscreen] td toggle_page_mode

map ts toggle_statusbar
map ti toggle_inputbar
map [fullscreen] ts toggle_statusbar
map [fullscreen] ti toggle_inputbar
#+end_src

** Zoom
#+begin_src vimrc
map <C-=> zoom in
map <C--> zoom out
map <C-0> zoom
map [fullscreen] <C-=> zoom in
map [fullscreen] <C--> zoom out
map [fullscreen] <C-0> zoom
#+end_src

** Hints
#+begin_src vimrc
map y feedkeys c
map ;y feedkeys c
map [fullscreen] y feedkeys c
map [fullscreen] ;y feedkeys c

map ;f follow
map [fullscreen] ;f follow

map ;F display_link
map [fullscreen] ;F display_link
#+end_src

** Command
#+begin_src vimrc
map <A-x> feedkeys :
map [fullscreen] <A-x> feedkeys :
#+end_src

