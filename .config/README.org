#+TITLE: .config
#+AUTHOR: Artem Smaznov
#+DESCRIPTION: Miscalenious dotfiles
#+STARTUP: overview

* Table of Contents :toc:
- [[#xdg-mime][XDG Mime]]
  - [[#added-associations][Added Associations]]
  - [[#default-applications][Default Applications]]
- [[#auto-start][Auto-start]]
  - [[#startup-sound][Startup Sound]]
  - [[#wallpaper][Wallpaper]]
  - [[#screen-locker][Screen Locker]]
  - [[#system-utilities][System Utilities]]
  - [[#background-apps][Background Apps]]
  - [[#launch-apps][Launch Apps]]
- [[#conky][Conky]]
  - [[#config][Config]]
  - [[#contents][Contents]]
- [[#mbsync][mbsync]]
  - [[#gmail-main][Gmail Main]]
  - [[#gmail-artem][Gmail Artem]]

* XDG Mime
:PROPERTIES:
:header-args: :tangle mimeapps.list
:END:
** Added Associations
#+begin_src conf
[Added Associations]
#+end_src

*** IDE
#+begin_src conf
application/javascript=emacs.desktop;code-oss.desktop;
application/x-httpd-php3=emacs.desktop;code-oss.desktop;
application/x-httpd-php4=emacs.desktop;code-oss.desktop;
application/x-httpd-php5=emacs.desktop;code-oss.desktop;
application/x-m4=emacs.desktop;code-oss.desktop;
application/x-php=emacs.desktop;code-oss.desktop;
application/x-ruby=emacs.desktop;code-oss.desktop;
application/x-shellscript=emacs.desktop;code-oss.desktop;
application/xml=emacs.desktop;code-oss.desktop;
text/css=emacs.desktop;code-oss.desktop;
text/html=emacs.desktop;code-oss.desktop;
text/plain=emacs.desktop;
text/turtle=emacs.desktop;code-oss.desktop;
text/x-c++hdr=emacs.desktop;code-oss.desktop;
text/x-c++src=emacs.desktop;code-oss.desktop;
text/x-chdr=emacs.desktop;code-oss.desktop;
text/x-csharp=emacs.desktop;code-oss.desktop;
text/x-csrc=emacs.desktop;code-oss.desktop;
text/x-diff=emacs.desktop;code-oss.desktop;
text/x-dsrc=emacs.desktop;code-oss.desktop;
text/x-fortran=emacs.desktop;code-oss.desktop;
text/x-java=emacs.desktop;code-oss.desktop;
text/x-makefile=emacs.desktop;code-oss.desktop;
text/x-pascal=emacs.desktop;code-oss.desktop;
text/x-perl=emacs.desktop;code-oss.desktop;
text/x-python=emacs.desktop;code-oss.desktop;
text/x-sql=emacs.desktop;code-oss.desktop;
text/x-vb=emacs.desktop;code-oss.desktop;
text/yaml=emacs.desktop;code-oss.desktop;
#+end_src

*** PDF
#+begin_src conf
application/pdf=org.pwmt.zathura.desktop,sejda-desktop.desktop;brave-browser.desktop;xreader.desktop;
#+end_src

*** Browser
#+begin_src conf
application/xhtml+xml=brave-browser.desktop;emacs.desktop;code-oss.desktop;
#+end_src

*** Images
#+begin_src conf
image/jpeg=vimiv.desktop;
image/png=vimiv.desktop;
image/gif=mpv.desktop;vimiv.desktop;
image/svg+xml=vimiv.desktop;
image/tiff=vimiv.desktop;
image/x-canon-cr2=vimiv.desktop;
#+end_src

*** Videos
#+begin_src conf
video/mp4=mpv.desktop;io.github.celluloid_player.Celluloid.desktop;
video/quicktime=mpv.desktop;io.github.celluloid_player.Celluloid.desktop;
video/webm=mpv.desktop;io.github.celluloid_player.Celluloid.desktop;
video/x-flv=mpv.desktop;io.github.celluloid_player.Celluloid.desktop;
video/x-matroska=mpv.desktop;io.github.celluloid_player.Celluloid.desktop;
video/x-ms-wmv=mpv.desktop;io.github.celluloid_player.Celluloid.desktop;
application/x-partial-download=mpv.desktop;
#+end_src

*** Others
#+begin_src conf
application/vnd.sqlite3=userapp-digikam-P3EHI0.desktop;
application/x-desktop=xed.desktop;
inode/directory=pcmanfm.desktop;nemo.desktop;
#+end_src

** Default Applications
#+begin_src conf
[Default Applications]
#+end_src
*** IDE
#+begin_src conf
application/javascript=emacs.desktop
application/x-desktop=emacs.desktop
application/x-httpd-php3=emacs.desktop
application/x-httpd-php4=emacs.desktop
application/x-httpd-php5=emacs.desktop
application/x-m4=emacs.desktop
application/x-php=emacs.desktop
application/x-ruby=emacs.desktop
application/x-shellscript=emacs.desktop
application/xml=emacs.desktop
text/css=emacs.desktop
text/plain=emacs.desktop
text/turtle=emacs.desktop
text/x-c++hdr=emacs.desktop
text/x-c++src=emacs.desktop
text/x-chdr=emacs.desktop
text/x-csharp=emacs.desktop
text/x-csrc=emacs.desktop
text/x-diff=emacs.desktop
text/x-dsrc=emacs.desktop
text/x-fortran=emacs.desktop
text/x-java=emacs.desktop
text/x-makefile=emacs.desktop
text/x-pascal=emacs.desktop
text/x-perl=emacs.desktop
text/x-python=emacs.desktop
text/x-sql=emacs.desktop
text/x-vb=emacs.desktop
text/yaml=emacs.desktop
#+end_src

*** PDF
#+begin_src conf
application/pdf=org.pwmt.zathura.desktop
#+end_src

*** Browser
#+begin_src conf
application/xhtml+xml=org.qutebrowser.qutebrowser.desktop;
text/html=org.qutebrowser.qutebrowser.desktop
text/xml=org.qutebrowser.qutebrowser.desktop
x-scheme-handler/about=org.qutebrowser.qutebrowser.desktop
x-scheme-handler/http=org.qutebrowser.qutebrowser.desktop
x-scheme-handler/https=org.qutebrowser.qutebrowser.desktop
x-scheme-handler/mailto=org.qutebrowser.qutebrowser.desktop
x-scheme-handler/unknown=org.qutebrowser.qutebrowser.desktop
x-scheme-handler/webcal=org.qutebrowser.qutebrowser.desktop
#+end_src

*** Images
#+begin_src conf
image/bmp=vimiv.desktop
image/jpeg=vimiv.desktop
image/png=vimiv.desktop
image/gif=mpv.desktop;
image/svg+xml=vimiv.desktop
image/tiff=vimiv.desktop
image/x-canon-cr2=vimiv.desktop
#+end_src

*** Videos
#+begin_src conf
audio/mpeg=mpv.desktop
audio/x-mpegurl=mpv.desktop
audio/x-scpls=mpv.desktop
audio/x-vorbis+ogg=mpv.desktop
audio/x-wav=mpv.desktop
video/mkv=mpv.desktop
video/mov=mpv.desktop
video/mp2t=mpv.desktop
video/mp4=mpv.desktop
video/mpeg=mpv.desktop
video/msvideo=mpv.desktop
video/quicktime=mpv.desktop
video/webm=mpv.desktop
video/x-avi=mpv.desktop
video/x-flv=mpv.desktop
video/x-matroska=mpv.desktop
video/x-mpeg=mpv.desktop
video/x-ms-wmv=mpv.desktop
video/x-msvideo=mpv.desktop
video/x-ogm+ogg=mpv.desktop
#+end_src

*** Others
#+begin_src conf
inode/directory=pcmanfm.desktop
x-scheme-handler/slack=slack.desktop
#+end_src

* Auto-start
** Startup Sound
#+begin_src shell :tangle autostart-scripts/autostart.sh :shebang #!/usr/bin/env bash
paplay "$HOME/Music/windows95-startup.wav" &
#+end_src

** Wallpaper
#+begin_src shell :tangle autostart-scripts/autostart.sh
# nitrogen --restore &
~/.local/bin/dmscripts/dm-wallpaper landscape &
#+end_src

** Screen Locker
#+begin_src shell :tangle autostart-scripts/autostart.sh
# xscreensaver -no-splash &
# xautolock -time 60 -locker "$HOME/.local/bin/dmscripts/dm-lock" &
xss-lock -- "$HOME/.local/bin/dmscripts/dm-lock" &
#+end_src

** System Utilities
#+begin_src shell :tangle autostart-scripts/autostart.sh
picom -b --experimental-backends --dbus &
nm-applet &
dunst &
unclutter -jitter 5 &
#+end_src

Japanese Language Input
#+begin_src shell :tangle autostart-scripts/autostart.sh
fcitx -d &
#+end_src

** Background Apps
#+begin_src shell :tangle autostart-scripts/autostart.sh
redshift-gtk &
# solaar -w hide &
/opt/piavpn/bin/pia-client --quiet &
emacs --daemon &
#+end_src

** Launch Apps
#+begin_src shell :tangle autostart-scripts/autostart.sh
# brave &
# brave --disable-features=SendMouseLeaveEvents &
qutebrowser &
/usr/bin/steam-runtime %U &
#+end_src

* Conky
Conky, a system monitor https://github.com/brndnmtthws/conky

This configuration file is Lua code. You can write code in here, and it will
execute when Conky loads. You can use it to generate your own advanced
configurations.

Try this (remove the `--`):

  print("Loading Conky config")

For more on Lua, see:
https://www.lua.org/pil/contents.html

** Config
#+begin_src conf :tangle ~/.config/conky/conky.conf
conky.config = {
    background = true,
    cpu_avg_samples = 2,
    double_buffer = true,
    no_buffers = true,
    net_avg_samples = 2,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    show_graph_range = false,
    show_graph_scale = false,
    update_interval = 1.0,

    -- Position
    alignment = 'top_left',
    gap_x = 1950,
    gap_y = 240,

    -- Size
    minimum_height = 5,
    minimum_width = 5,

    -- Theme
    border_width = 1,
    font = 'DejaVu Sans Mono:size=12',
    draw_borders = false,
    draw_graph_borders = true,
    draw_outline = false,
    draw_shades = false,
    extra_newline = false,
    stippled_borders = 0,
    uppercase = false,
    use_spacer = 'none',
    use_xft = true,

    -- Colors
    color0 = '#c678dd',
    color1 = '#bbc2cf',
    color2 = '#51afef',
    color3 = '#98be65',

    default_color = 'white',
    default_outline_color = 'white',
    default_shade_color = 'white',

    -- Windows
    own_window = true,
	own_window_argb_value = 255,			    -- real transparency - composite manager required 0-255
	own_window_argb_visual = true,				-- use ARGB - composite manager required
    own_window_class = 'Conky',
    -- if own_window true options are: normal/override/dock/desktop/panel
    own_window_type = 'override',
	own_window_transparent = false,				-- if own_window_argb_visual is true sets background opacity 0%
	own_window_colour = '#282828',				-- set colour if own_window_transparent no
	own_window_hints = 'undecorated,below,above,sticky,skip_taskbar,skip_pager',  -- if own_window true - just hints - own_window_type sets it

}
#+end_src

** Contents
#+begin_src conf :tangle ~/.config/conky/conky.conf
conky.text = [[
${alignc}${color0}${font Ubuntu:size=30}${time %I:%M}${font} ${voffset 6}${alignc}${color0}${font Ubuntu:size=14}${time %b %d, %Y}${font}${color}
${voffset 18}${goto 12}${color3}CPU${goto 50}$cpu%
${color2}${goto 12}${cpubar 8,254}
${voffset 5}${goto 12}$font${color1}${top name 1}$alignr$color${top cpu 1}%
${goto 12}${color1}${top name 2}$alignr$color${top cpu 2}%
${goto 12}${color1}${top name 3}$alignr$color${top cpu 3}%
${voffset 14}${goto 12}${color3}RAM${goto 50}$mem/$memmax
${color2}${goto 12}${membar 8,254}${color}
${goto 12}${voffset 5}${color1}${top_mem name 1}$alignr$color${top_mem mem_res 1}
${goto 12}${color1}${top_mem name 2}$alignr$color${top_mem mem_res 2}
${goto 12}${color1}${top_mem name 3}$alignr$color${top_mem mem_res 3}
# ${voffset 18}${color1}${alignc}QTILE KEYBINDINGS${color}
# ${color1}${hr}${color}
# ${color1}[S]+[RET]${alignr}${color2}open terminal${color}
# ${color1}[S]+b${alignr}${color2}open qutebrowser${color}
# ${color1}[S]+[SHIFT]+[RET]${alignr}${color2}run prompt${color}
# ${color1}[S]+[SHIFT]+c${alignr}${color2}close window${color}
# ${color1}[S]+hjkl${alignr}${color2}move win focus${color}
# ${color1}[S]+[SHIFT]+hjkl${alignr}${color2}move window${color}
# ${color1}[S]+[1-9]${alignr}${color2}switch workspace${color}
# ${color1}[S]+[SHIFT]+[1-9]${alignr}${color2}send window${color}
# ${color1}[S]+h/l${alignr}${color2}shrink/expand${color}
# ${color1}${hr}${color}
# ${color1}[CTRL]+e, e${alignr}${color2}launch emacs${color}
# ${color1}[CTRL]+e, b${alignr}${color2}ibuffer${color}
# ${color1}[CTRL]+e, d${alignr}${color2}dired${color}
# ${color1}[CTRL]+e, n${alignr}${color2}elfeed${color}
# ${color1}[CTRL]+e, s${alignr}${color2}eshell${color}
# ${color1}[CTRL]+e, v${alignr}${color2}vterm${color}
# ${color1}${hr}${color}
# ${color1}[S]+p, h${alignr}${color2}dm-hub${color}
# ${color1}[S]+p, b${alignr}${color2}dm-setbg${color}
# ${color1}[S]+p, e${alignr}${color2}dm-confedit${color}
# ${color1}[S]+p, m${alignr}${color2}dm-man${color}
# ${color1}[S]+p, o${alignr}${color2}dm-bookman${color}
# ${color1}[S]+p, s${alignr}${color2}dm-websearch${color}
# ${color1}${hr}${color}
# ${color1}[S]+[SHIFT]+r${alignr}${color2}restart xmonad${color}
# ${color1}[S]+[SHIFT]+q${alignr}${color2}quit xmonad${color}
]]
#+end_src

* mbsync
based on http://www.ict4g.net/adolfo/notes/2014/12/27/EmacsIMAP.html

** Gmail Main
Account information
#+begin_src conf :tangle ~/.mbsyncrc
IMAPAccount gmail-main
Host imap.gmail.com
UserCmd "emacsclient -e \"my/email/main\" | cut -d '\"' -f2"
PassCmd "emacsclient -e \"(my/lookup-password :host \\\"smtp.gmail.com\\\" :user my/email/main)\" | cut -d '\"' -f2"
# Throttle mbsync and avoid Gmail's OVERQUOTA error when backing up Gmail
PipelineDepth 50
AuthMechs LOGIN
SSLType IMAPS
CertificateFile /etc/ssl/certs/ca-certificates.crt
#+end_src

Then we specify the local and remote storage
- the remote storage is where we get the mail from (e.g., the
  specification of an imap account)
- the local storage is where we store the email on our computer

Remote storage (use the imap account specified above)
#+begin_src conf :tangle ~/.mbsyncrc
IMAPStore gmail-remote
Account gmail-main
#+end_src

Local storage (create directories with mkdir -p maildir/gmail)
#+begin_src conf :tangle ~/.mbsyncrc
MaildirStore gmail-local
Path ~/Maildir/
Inbox ~/Maildir/Inbox
Subfolders Verbatim
#+end_src

Connections specify links between remote and local folders

Connections are specified using patterns, which match remote mail
folders. some commonly used patters include:

1. =*= to match everything
2. =!dir= to exclude dir
3. =dir= to match dir

Gmail mailboxes:
- =All Mail=
- =Drafts=
- =Important=
- =Sent Mail=
- =Spam=
- =Starred=
- =Trash=

#+begin_src conf :tangle ~/.mbsyncrc
Channel gmail-main
Far :gmail-remote:
Near :gmail-local:
Patterns * ![Gmail]* "[Gmail]/Sent Mail" "[Gmail]/All Mail" "[Gmail]/Trash" "[Gmail]/Drafts" "[Gmail]/Important"
Create Both
Expunge Both
SyncState *
#+end_src

** Gmail Artem
Account information
#+begin_src conf :tangle ~/.mbsyncrc
# IMAPAccount gmail-artem
# Host imap.gmail.com
# UserCmd "emacsclient -e \"my/email/artem\" | cut -d '\"' -f2"
# PassCmd "emacsclient -e \"(my/lookup-password :host \\\"smtp.gmail.com\\\" :user my/email/artem)\" | cut -d '\"' -f2"
# # Throttle mbsync and avoid Gmail's OVERQUOTA error when backing up Gmail
# PipelineDepth 50
# AuthMechs LOGIN
# SSLType IMAPS
# CertificateFile /etc/ssl/certs/ca-certificates.crt
#+end_src

Then we specify the local and remote storage
- the remote storage is where we get the mail from (e.g., the
  specification of an imap account)
- the local storage is where we store the email on our computer

Remote storage (use the imap account specified above)
#+begin_src conf :tangle ~/.mbsyncrc
# IMAPStore gmail-artem-remote
# Account gmail-artem
#+end_src

Local storage (create directories with mkdir -p maildir/gmail)
#+begin_src conf :tangle ~/.mbsyncrc
# MaildirStore gmail-artem-local
# Path ~/Maildir/Artem/
# Inbox ~/Maildir/Artem/Inbox
# Subfolders Verbatim
#+end_src

Connections specify links between remote and local folders

Connections are specified using patterns, which match remote mail
folders. some commonly used patters include:

1. =*= to match everything
2. =!dir= to exclude dir
3. =dir= to match dir

Gmail mailboxes:
- =All Mail=
- =Drafts=
- =Important=
- =Sent Mail=
- =Spam=
- =Starred=
- =Trash=

#+begin_src conf :tangle ~/.mbsyncrc
# Channel gmail-artem
# Far :gmail-artem-remote:
# Near :gmail-artem-local:
# Patterns * ![Gmail]* "[Gmail]/Sent Mail" "[Gmail]/Starred" "[Gmail]/All Mail" "[Gmail]/Trash" "[Gmail]/Drafts" "[Gmail]/Important"
# Create Both
# # Expunge Both
# SyncState *
#+end_src

