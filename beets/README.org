#+title:       Beet
#+author:      Artem Smaznov
#+description: Music tagger and library organizer
#+startup:     overview
#+property:    header-args :tangle config.yaml
#+auto_tangle: t

* Table of Contents :toc:
- [[#dependencies][Dependencies]]
- [[#global-options][Global Options]]
- [[#ui][UI]]
- [[#importer-options][Importer Options]]
- [[#musicbrainz][MusicBrainz]]
- [[#plugins][Plugins]]
  - [[#bad-files][Bad Files]]
  - [[#chroma][Chroma]]
  - [[#duplicates][Duplicates]]
  - [[#fetchart][FetchArt]]
  - [[#info][Info]]
  - [[#lastgenre][LastGenre]]
  - [[#lyrics][Lyrics]]
  - [[#mbsubmit][MBSubmit]]
  - [[#mbsync][MBSync]]
  - [[#mpd-stats][MPD Stats]]
  - [[#mpd-update][MPD Update]]
  - [[#scrub][Scrub]]

* Dependencies
|-------------------+------------------------------------|
| Name              | Description                        |
|-------------------+------------------------------------|
| [[https://archlinux.org/packages/?name=beets][beets]]             | Music tagger and library organizer |
|-------------------+------------------------------------|
| [[https://archlinux.org/packages/?name=ffmpeg][ffmpeg]]            | Audio decoder                      |
| [[https://archlinux.org/packages/?name=python-pylast][python-pylast]]     | Required for LastGenre plugin      |
| [[https://archlinux.org/packages/?name=python-mpd2][python-mpd2]]       | Required for MPDStats plugin       |
| [[https://archlinux.org/packages/?name=python-pyacoustid][python-pyacoustid]] | Required for Chroma plugin         |
| [[https://archlinux.org/packages/?name=chromaprint][chromaprint]]       | Required for Chroma plugin         |
| [[https://archlinux.org/packages/?name=python-requests][python-requests]]   | Required for FetchArt plugin       |
|-------------------+------------------------------------|

#+begin_example shell
sudo pacman -S --needed beets \
                        ffmpeg \
                        python-pylast \
                        pythong-mpd2 \
                        python-pyacoustid \
                        chromaprint \
                        python-requests
#+end_example

* Global Options
#+begin_src yaml
library: ~/.config/beets/library.db
directory: ~/music
#+end_src

* UI
Available colors: ~black~, ~darkred~, ~darkgreen~, ~brown~ (~darkyellow~), ~darkblue~, ~purple~ (~darkmagenta~), ~teal~ (~darkcyan~), ~lightgray~, ~darkgray~, ~red~, ~green~, ~yellow~, ~blue~, ~fuchsia~ (~magenta~), ~turquoise~ (~cyan~), ~white~

#+begin_src yaml :tangle no
ui:
    color: yes
    colors:
        text_success: green
        text_warning: yellow
        text_error: red
        text_highlight: red
        text_highlight_minor: lightgray
        action_default: turquoise
        action: blue
#+end_src

* Importer Options
#+begin_src yaml
import:
    write: yes       # -w -W
    copy: no         # -c -C
    move: yes
    resume: ask      # -p -P
    timid: no        # -t
    group_albums: no # -g
    autotag: yes     # -a
    duplicate_action: ask
    bell: yes
    languages: en ru
#+end_src

#+begin_src yaml
asciify_paths: yes
per_disc_numbering: yes
#+end_src

#+begin_src yaml
paths:
    default: '%lower{$albumartist}/%lower{$album%aunique{}}/%lower{${track}-${title}}'
    singleton: '%lower{$artist}/%lower{$title}'
    albumtype:soundtrack: 'soundtracks/%lower{$album%aunique{}}/%lower{${track}-${title}}'
    comp: 'compilations/%lower{$album%aunique{}}/%lower{${track}-${title}}'
#+end_src

#+begin_src yaml
replace:
    '[\x00-\x1f]': _
    '&': 'and'
    '[~!\\/<>"\?\*\|\[\]()]': ''
    "'": ''
    '[\.]+$': ''
    '^[\.]': ''
    '\s+$': ''
    '^\s+': ''
    '\s*[-,;:]\s*': '-'
    ' ': '-'
#+end_src

* MusicBrainz
#+begin_src yaml
musicbrainz:
    searchlimit: 15
#+end_src

* Plugins
#+begin_src yaml
plugins: badfiles chroma duplicates fetchart info lastgenre lyrics mbsubmit mbsync mpdstats mpdupdate scrub
#+end_src

** Bad Files
The badfiles plugin adds a beet bad command to check for missing and corrupt
files.
#+begin_src yaml
badfiles:
  check_on_import: yes
#+end_src

** Chroma
[[https://beets.readthedocs.io/en/stable/plugins/chroma.html][Acoustic fingerprinting]] is a technique for identifying songs from the way they “sound” rather from their existing metadata. That means that beets’ auto-tagger can theoretically use fingerprinting to tag files that don’t have any ID3 information at all (or have completely incorrect data). This plugin uses an open-source fingerprinting technology called [[https://acoustid.org/chromaprint][Chromaprint]] and its associated Web service, called [[https://acoustid.org/][Acoustid]].

#+begin_src yaml
chroma:
    auto: yes
#+end_src

** Duplicates
This plugin adds a new command, duplicates or dup, which finds and lists
duplicate tracks or albums in your collection.

** FetchArt
The [[https://beets.readthedocs.io/en/stable/plugins/fetchart.html][fetchart]] plugin retrieves album art images from various sources on the Web and stores them as image files.

#+begin_src yaml
fetchart:
    auto: yes
    minwidth: 0
    maxwidth: 0
    quality: 0
    max_filesize: 0
    enforce_ratio: no
    cautious: no
    cover_names:
    - cover
    - front
    - art
    - album
    - folder
    sources:
    - filesystem
    - coverart
    - itunes
    - amazon
    - albumart
    store_source: no
    high_resolution: no
    deinterlace: no
#+end_src

** Info
The info plugin provides a command that dumps the current tag values for any file format supported by beets

** LastGenre
The [[https://beets.readthedocs.io/en/stable/plugins/lastgenre.html][lastgenre]] plugin fetches tags from [[https://last.fm/][Last.fm]] and assigns them as genres to your albums and items.

#+begin_src yaml
lastgenre:
    auto: yes
    canonical: no
    count: 5
    fallback:
    force: yes
    min_weight: 10
    prefer_specific: no
    source: album
    whitelist: yes
    title_case: yes
#+end_src

fetch genres for albums or items matching a certain query.
#+begin_example shell
beet lastgenre [QUERY]
#+end_example

By default, beet lastgenre matches albums.
Match individual tracks or singletons.
#+begin_example shell
beet lastgenre -A [QUERY]
#+end_example

** Lyrics
The lyrics plugin fetches and stores song lyrics from databases on the Web.
Namely, the current version of the plugin uses Musixmatch, Genius.com,
Tekstowo.pl, and, optionally, the Google custom search API.
#+begin_src yaml
lyrics:
  auto: no
#+end_src

** MBSubmit
The mbsubmit plugin provides an extra prompt choice during an import session
that prints the tracks of the current album in a format that is parseable by
MusicBrainz’s track parser.

** MBSync
This plugin provides the mbsync command, which lets you fetch metadata from
MusicBrainz for albums and tracks that already have MusicBrainz IDs

** MPD Stats
[[https://beets.readthedocs.io/en/stable/plugins/mpdstats.html][mpdstats]] is a plugin for beets that collects statistics about your listening habits from [[https://www.musicpd.org/][MPD]].
Needs to be run with =beet mpdstats=

#+begin_src yaml
mpd:
    rating: yes
    rating_mix: 0.75
#+end_src

** MPD Update
[[https://beets.readthedocs.io/en/stable/plugins/mpdupdate.html][mpdupdate]] is a very simple plugin for beets that lets you automatically update MPD’s index whenever you change your beets library.
** Scrub
The scrub plugin lets you remove extraneous metadata from files’ tags. If you’d
prefer never to see crufty tags that come from other tools, the plugin can
automatically remove all non-beets-tracked tags whenever a file’s metadata is
written to disk by removing the tag entirely before writing new data
#+begin_src yaml
scrub:
    auto: yes
#+end_src
